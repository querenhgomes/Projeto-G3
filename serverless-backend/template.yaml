AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  serverless-backend

  Template for serverless-backend

Parameters:
  MongoConnection:
    Type: String
    Default: 'mongodb+srv://<user>:<password>@<mongo-database>.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'
    Description: (Required) Connection string for remote mongo DB database
    MinLength: 70
    MaxLength: 120
    AllowedPattern: ^mongodb\+srv:\/\/.+:.+@.+\.mongodb.+$
    ConstraintDescription: 'Required. Must include user and password.'
  TokenSecret:
    Type: String
    Default: 'secret'
    Description: (Required) Secret for JWT validation
    MinLength: 3
    MaxLength: 120
    AllowedPattern: ^.+$
    ConstraintDescription: 'Required'

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 15
    Runtime: nodejs14.x
    Handler: app.lambdaHandler
    Environment:
            Variables:
                MONGODB_URI: !Ref MongoConnection
                JWT_SECRET: !Ref TokenSecret

Resources:
  UserFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handlers/user/
      Handler: index.lambdaHandler
      Events:
        SignUp:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /signup
            Method: post
        Login:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /login
            Method: post
        User:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /user
            Method: get
      Layers:
            - !Ref SharedLibsLayer
  PostFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handlers/post/
      Handler: index.lambdaHandler
      Events:
        NewPost:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /post
            Method: post
        GetPosts:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /posts
            Method: get
        GetPost:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /posts/{id}
            Method: get
      Layers:
            - !Ref SharedLibsLayer
  # Layers
  SharedLibsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: DependenciesLayer
      ContentUri: layers/
      CompatibleRuntimes:
        - nodejs14.x
        - nodejs12.x
        - nodejs10.x
      RetentionPolicy: Retain

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Api:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  UserFunction:
    Description: "User Lambda Function ARN"
    Value: !GetAtt UserFunction.Arn
  UserFunctionIamRole:
    Description: "Implicit IAM Role created for SignUp function"
    Value: !GetAtt UserFunctionRole.Arn
